# Copyright (C) 2013 Tanaka Akira  <akr@fsij.org>
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  3. The name of the author may not be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.

CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LDLIBS = @LIBS@

TARGETS = size const unix-stream
UTILOBJS = util.o errsym.o

all: $(TARGETS)

clean:
	rm -f $(TARGETS) *.o

size: size.o
	$(CC) $(LDFLAGS) size.o $(LDLIBS) -o $@

const: const.o
	$(CC) $(LDFLAGS) const.o $(LDLIBS) -o $@

unix-stream: unix-stream.o $(UTILOBJS)
	$(CC) $(LDFLAGS) unix-stream.o $(UTILOBJS) $(LDLIBS) -o $@

size.o: size.c sockettest.h config.h
unix-stream.o: unix-stream.c sockettest.h config.h
util.o: util.c sockettest.h config.h
errsym.o: errsym.c sockettest.h config.h
const.o: size.c sockettest.h config.h

errsym.c: errsym.erb
	if cmp -s errsym.erb .stamp-errsym.src; \
	then \
	  cp .stamp-errsym.blt errsym.c; \
	else \
	  erb errsym.erb > errsym.c.tmp && \
	  mv errsym.c.tmp errsym.c && \
	  cp errsym.c .stamp-errsym.blt && \
	  cp errsym.erb .stamp-errsym.src; \
	fi

const.c: const.erb
	if cmp -s const.erb .stamp-const.src; \
	then \
	  cp .stamp-const.blt const.c; \
	else \
	  erb const.erb > const.c.tmp && \
	  mv const.c.tmp const.c && \
	  cp const.c .stamp-const.blt && \
	  cp const.erb .stamp-const.src; \
	fi

results.html : table-result.erb \
  results/linux.txt \
  results/freebsd.txt \
  results/netbsd.txt \
  results/openbsd.txt \
  results/sunos.txt \
  results/cygwin.txt
	erb table-result.erb > results.html
