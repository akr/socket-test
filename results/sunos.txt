uname -mrsv
SunOS 5.11 snv_111b i86pc
./size
sockaddr :                    size=16 align=2
sockaddr.sa_family :            offset=0    size=2
sockaddr.sa_data :              offset=2    size=14
sockaddr_un :                 size=110 align=2
sockaddr_un.sun_family :        offset=0    size=2
sockaddr_un.sun_path :          offset=2    size=108
sockaddr_in :                 size=16 align=4
sockaddr_in.sin_family :        offset=0    size=2
sockaddr_in.sin_port :          offset=2    size=2
sockaddr_in.sin_addr :          offset=4    size=4
sockaddr_in6 :                size=32 align=4
sockaddr_in6.sin6_family :      offset=0    size=2
sockaddr_in6.sin6_port :        offset=2    size=2
sockaddr_in6.sin6_flowinfo :    offset=4    size=4
sockaddr_in6.sin6_addr :        offset=8    size=16
sockaddr_in6.sin6_scope_id :    offset=24   size=4
sockaddr_storage :            size=256 align=4
sockaddr_storage.ss_family :    offset=0    size=2
./const
AF_UNSPEC: 0 (4 bytes)
PF_UNSPEC: 0 (4 bytes)
AF_UNIX: 1 (4 bytes)
PF_UNIX: 1 (4 bytes)
AF_INET: 2 (4 bytes)
PF_INET: 2 (4 bytes)
AF_INET6: 26 (4 bytes)
PF_INET6: 26 (4 bytes)
SOCK_STREAM: 2 (4 bytes)
SOCK_DGRAM: 1 (4 bytes)
SOCK_SEQPACKET: 6 (4 bytes)
SOMAXCONN: 128 (4 bytes)
PATH_MAX: 1024 (4 bytes)
EXIT_SUCCESS: 0 (4 bytes)
EXIT_FAILURE: 1 (4 bytes)
./unix-stream 'foo' './foo'
bind(server)          <- "foo" (3 bytes)
socket file (server)  : exist
getsockname(server)   -> "foo\0" (4 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "./foo" (5 bytes)
getpeername(client)   -> "./foo\0" (6 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "foo\0" (4 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream 'foo\0bar' './foo\0hoge'
bind(server)          <- "foo\0bar" (7 bytes)
socket file (server)  : exist
getsockname(server)   -> "foo\0bar" (7 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "./foo\0hoge" (10 bytes)
getpeername(client)   -> "./foo\0hoge" (10 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "foo\0bar" (7 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream -p '012345678'
bind(server)          <- "(98*"Z")012345678" (107 bytes)
socket file (server)  : exist
getsockname(server)   -> "(98*"Z")012345678\0" (108 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(98*"Z")012345678" (107 bytes)
getpeername(client)   -> "(98*"Z")012345678\0" (108 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(98*"Z")012345678\0" (108 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream -p '0123456789'
bind(server)          <- "(98*"Z")0123456789" (108 bytes)
socket file (server)  : exist
getsockname(server)   -> "(98*"Z")0123456789"... (109 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(98*"Z")0123456789" (108 bytes)
getpeername(client)   -> "(98*"Z")0123456789"... (109 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(98*"Z")0123456789"... (109 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream -p '01234567890'
bind(server)          <- "(98*"Z")01234567890" (109 bytes)
socket file (server)  : exist
getsockname(server)   -> "(98*"Z")0123456789"... (110 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(98*"Z")01234567890" (109 bytes)
getpeername(client)   -> "(98*"Z")0123456789"... (110 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(98*"Z")0123456789"... (110 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream '(25*"0123456789")012'
bind(server)          <- "(25*"0123456789")012" (253 bytes)
socket file (server)  : exist
getsockname(server)   -> "(10*"0123456789")01234567"... (254 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(25*"0123456789")012" (253 bytes)
getpeername(client)   -> "(10*"0123456789")01234567"... (254 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(10*"0123456789")01234567"... (254 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream -g 1024 '(25*"0123456789")012'
bind(server)          <- "(25*"0123456789")012" (253 bytes)
socket file (server)  : exist
getsockname(server)   -> "(25*"0123456789")012\0" (254 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(25*"0123456789")012" (253 bytes)
getpeername(client)   -> "(25*"0123456789")012\0" (254 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(25*"0123456789")012\0" (254 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream '(25*"0123456789")0123'
bind(server)          <- "(25*"0123456789")0123" (254 bytes)
socket file (server)  : exist
getsockname(server)   -> "(10*"0123456789")01234567"... (255 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(25*"0123456789")0123" (254 bytes)
getpeername(client)   -> "(10*"0123456789")01234567"... (255 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(10*"0123456789")01234567"... (255 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream '(25*"0123456789")01234'    
bind(server)          <- "(25*"0123456789")01234" (255 bytes)
socket file (server)  : exist
getsockname(server)   -> "(10*"0123456789")01234567"... (256 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(25*"0123456789")01234" (255 bytes)
getpeername(client)   -> "(10*"0123456789")01234567"... (256 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(10*"0123456789")01234567"... (256 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream '(25*"0123456789")012345'
bind(server)          <- "(25*"0123456789")012345" (256 bytes)
bind(server): File name too long (ENAMETOOLONG)
./unix-stream '(511*"./")a'      
bind(server)          <- "(511*"./")a" (1023 bytes)
socket file (server)  : exist
getsockname(server)   -> "(54*"./")"... (1024 bytes)
getsockname(client)   -> too short sockaddr_un (0 bytes)
connect               <- "(511*"./")a" (1023 bytes)
getpeername(client)   -> "(54*"./")"... (1024 bytes)
accept                -> "(14*"\0")" (14 bytes)
getsockname(accepted) -> "(54*"./")"... (1024 bytes)
getpeername(accepted) -> "(14*"\0")" (14 bytes)
./unix-stream '(511*"./")ab'      
bind(server)          <- "(511*"./")ab" (1024 bytes)
bind(server): File name too long (ENAMETOOLONG)
./unix-stream 'foo' 'foo' '(200*"b")'
bind(server)          <- "foo" (3 bytes)
socket file (server)  : exist
getsockname(server)   -> "foo\0" (4 bytes)
bind(client)          <- "(200*"b")" (200 bytes)
socket file (client)  : exist
getsockname(client)   -> "(108*"b")"... (201 bytes)
connect               <- "foo" (3 bytes)
getpeername(client)   -> "foo\0" (4 bytes)
accept                -> "(108*"b")"... (201 bytes)
getsockname(accepted) -> "foo\0" (4 bytes)
getpeername(accepted) -> "(108*"b")"... (201 bytes)
./unix-stream -s /etc/hosts
bind(server)          <- "/etc/hosts" (10 bytes)
bind(server): Address already in use (EADDRINUSE)
./unix-stream -s /etc
bind(server)          <- "/etc" (4 bytes)
bind(server): Address already in use (EADDRINUSE)
./unix-stream -s /
bind(server)          <- "/" (1 bytes)
bind(server): Invalid argument (EINVAL)
./unix-stream -s /foo
bind(server)          <- "/foo" (4 bytes)
bind(server): Permission denied (EACCES)
./unix-stream -s /foo/bar
bind(server)          <- "/foo/bar" (8 bytes)
bind(server): No such file or directory (ENOENT)
./unix-stream -s ''
bind(server)          <- "" (0 bytes)
bind(server): Is a directory (EISDIR)
./unix-stream -s 'foo'
bind(server)          <- "foo" (3 bytes)
socket file (server)  : exist
getsockname(server)   -> "foo\0" (4 bytes)
